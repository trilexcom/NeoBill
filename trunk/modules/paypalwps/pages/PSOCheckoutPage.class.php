<?php
/**
 * PSOCheckoutPage.class.php
 *
 * This file contains the definition of the PSOCheckoutPage class.
 *
 * @package Pages
 * @author John Diamond <jdiamond@solid-state.org>
 * @copyright John Diamond <jdiamond@solid-state.org>
 * @license http://www.opensource.org/licenses/gpl-license.php GNU Public License
 */

// Include the parent class
require_once $base_path . "solidworks/Page.class.php";

require_once $base_path . "DBO/OrderDBO.class.php";

/**
 * PSOCheckoutPage
 *
 * Prepares a cart upload for Paypal checkout.
 *
 * @package Pages
 * @author John Diamond <jdiamond@solid-state.org>
 */
class PSOCheckoutPage extends Page
{
  /**
   * @var Paypal Paypal Module object
   */
  var $ppModule;

  /**
   * Action
   *
   * Actions handled by this page:
   *
   * @param string $action_name Action
   */
  function action( $action_name )
  {
    switch( $action_name )
      {
      case "pso_checkout":
	if( isset( $this->session['pso_checkout']['back'] ) )
	  {
	    $this->goto( "review" );
	  }
	elseif( isset( $this->session['pso_checkout']['startover'] ) )
	  {
	    $this->newOrder();
	  }
	break;

      default:
	// No matching action - refer to base class
	parent::action( $action_name );

      }
  }

  /**
   * Dump the Cart
   *
   * Dumps the cart to a table that will be processed by the template.
   *
   * @return array Cart data
   */
  function dumpCart()
  {
    $cart = array();
    foreach( $_SESSION['order']->getItems() as $orderItemDBO )
      {
	$cart[] = array( "name" => $orderItemDBO->getDescription(),
			 "quantity" => 1,
			 "amount" => $orderItemDBO->getPrice(),
			 "tax" => $orderItemDBO->getTaxAmount() );

	if( is_a( $orderItemDBO, "OrderHostingDBO" ) &&
	    $orderItemDBO->getSetupFee() > 0 )
	  {
	    // Charge a setup fee
	    $desc = sprintf( "%s: [SETUP_FEE]", $orderItemDBO->getDescription() );
	    $desc = translate_string( $this->conf['locale']['language'], $desc );
	    $cart[] = array( "name" => $desc,
			     "quantity" => 1,
			     "amount" => $orderItemDBO->getSetupFee(),
			     "tax" => 0 );
	  }
      }
    return $cart;
  }

  /**
   * Initialize the Page
   */
  function init()
  {
    $this->ppModule = $this->conf['modules']['paypalwps'];

    $this->smarty->assign( "account", $this->ppModule->getAccount() );
    $this->smarty->assign( "cartURL", $this->ppModule->getCartURL() );
    $this->smarty->assign( "currencyCode", $this->ppModule->getCurrencyCode() );
    $this->smarty->assign( "orderid", $_SESSION['order']->getID() );

    // Dump the cart contents into a Smarty variable.  The Paypal cart upload
    // form will be generated by the template.
    $this->smarty->assign( "paypalCart", $this->dumpCart() );
  }

  /**
   * Start New Order
   */
  function newOrder()
  {
    // Start a new order
    unset( $_SESSION['order'] );
    $this->goto( "cart" );
  }
}
?>